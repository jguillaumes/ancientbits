Microsoft (R) Macro Assembler Version 6.11		    01/07/18 15:10:11
revers.asm						     Page 1 - 1


						.model small
						.stack
				
 = 0100				BUFSIZ  EQU 256
				
 0000						.data
				
 0000 52 65 76 65 72 73		hello   db  'Reverse program - MSDOS',0dh,0ah,'$'
       65 20 70 72 6F 67
       72 61 6D 20 2D 20
       4D 53 44 4F 53 0D
       0A 24
 001A 45 6E 74 65 72 20		prompt  db          'Enter a text line:  ','$'
       61 20 74 65 78 74
       20 6C 69 6E 65 3A
       20 20 24
 002F 0D 0A 49 6E 76 65		inver   db  0dh,0ah,'Inverted line:      ','$'
       72 74 65 64 20 6C
       69 6E 65 3A 20 20
       20 20 20 20 24
 0046 0D 0A 46 69 6E 69		bye    db  0dh,0ah,'Finished'
       73 68 65 64
 0050 0D 0A 24			crlf    db  0dh,0ah,'$'
 0053 FF			buffin  db  255
 0054 00			numch   db  0
 0055  0100 [			bufchr  db  BUFSIZ dup(' ')
        20
       ]
 0155  0100 [			bufout  db  BUFSIZ dup(' ')
        20
       ]
				
 0000						.code
				
 0000				main    proc
 0000  B8 ---- R				mov ax, seg hello       ; Setup data segment (DS and ES)
 0003  8E D8					mov ds, ax
 0005  8E C0					mov es, ax
				
 0007  8D 16 0000 R				lea dx, hello           ; Show welcome message
 000B  B4 09					mov ah, 09h
 000D  CD 21					int 21h
				
 000F  8D 16 001A R		getlin: lea dx, prompt      		; Show prompt
 0013  B4 09					mov ah, 09h
 0015  CD 21					int 21h
				
 0017  8D 16 0053 R				lea dx, buffin          ; Input text line
 001B  B4 0C					mov ah, 0ch             ; Clear STDIN buffer
 001D  B0 0A					mov al, 0ah             ; Buffered read DOS function
 001F  CD 21					int 21h
 0021  A0 0054 R				mov al, byte ptr [numch]; AL: Number of characters
 0024  3C 00					cmp al, 0               ; Is the buffer empty?
 0026  74 3C					je  final               ; Yes: finish
				
 0028  8D 16 002F R				lea dx,inver		; Display "Inverted..." text 
 002C  B4 09					mov ah,09h
 002E  CD 21					int 21h
				
 0030  8D 06 0055 R				lea ax,bufchr           ; AX => Start of input buffer
 0034  2B C9					sub cx,cx               ; CX => Zero
 0036  8A 0E 0054 R				mov cl,byte ptr [numch] ; CX => Number of bytes in buffer
 003A  03 C1					add ax,cx               ; AX => End of input text + 1
 003C  48					dec ax                  ; AX => End of input text
 003D  8B F0					mov si,ax               ; SI => End of input text
 003F  8D 3E 0155 R				lea di,bufout           ; DI => Start of output buffer
				
 0043				theloop:
 0043  FD					std                     ; change direction: decrement
 0044  AC					lodsb                   ; Load byte from DS:SI, decrement SI
 0045  FC					cld                     ; change direction: increment
 0046  AA					stosb                   ; Store byte at ES:DI, increment DI
 0047  E2 FA					loop theloop            ; Check CX and loop if not zero
 0049  B9 0003					mov cx,3                ; Prepare to move 3 more bytes (CR,LF,'$')
 004C  8D 36 0050 R				lea si,crlf             ; DS:SI => CR+LF+'$'
 0050  F3/ A4					rep movsb               ; Move to ES:DS (append to output buffer)
				
 0052  8D 16 0155 R				lea dx, bufout          ; Display output buffer (inverted text)
 0056  B4 09					mov ah, 09h
 0058  CD 21					int 21h
				
 005A  8D 16 0050 R				lea dx,crlf             ; New line...
 005E  B4 09					mov ah, 09h
 0060  CD 21					int 21h
				
 0062  EB AB					jmp getlin              ; Get one more line to process
				
				
 0064  8D 16 0046 R		final:  	lea dx, bye		; Display goodbye message
 0068  B4 09					mov ah, 09h
 006A  CD 21					int 21h
				
 006C  B8 4C00					mov ax, 4C00h		; End program, code=00 (ah=4Ch, al=00h)
 006F  CD 21					int 21h
				
 0071  C3					ret
 0072				main    endp
				
						end main
Microsoft (R) Macro Assembler Version 6.11		    01/07/18 15:10:11
revers.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	16 Bit	 0255	  Word	  Public  'DATA'	
STACK  . . . . . . . . . . . . .	16 Bit	 0400	  Para	  Stack	  'STACK'	 
_TEXT  . . . . . . . . . . . . .	16 Bit	 0072	  Word	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

main . . . . . . . . . . . . . .	P Near	 0000	  _TEXT	Length= 0072 Public
  getlin . . . . . . . . . . . .	L Near	 000F	  _TEXT	
  theloop  . . . . . . . . . . .	L Near	 0043	  _TEXT	
  final  . . . . . . . . . . . .	L Near	 0064	  _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0000h	 
@Model . . . . . . . . . . . . .	Number	 0002h	 
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
BUFSIZ . . . . . . . . . . . . .	Number	 0100h	 
bufchr . . . . . . . . . . . . .	Byte	 0055	  _DATA	
buffin . . . . . . . . . . . . .	Byte	 0053	  _DATA	
bufout . . . . . . . . . . . . .	Byte	 0155	  _DATA	
bye  . . . . . . . . . . . . . .	Byte	 0046	  _DATA	
crlf . . . . . . . . . . . . . .	Byte	 0050	  _DATA	
hello  . . . . . . . . . . . . .	Byte	 0000	  _DATA	
inver  . . . . . . . . . . . . .	Byte	 002F	  _DATA	
numch  . . . . . . . . . . . . .	Byte	 0054	  _DATA	
prompt . . . . . . . . . . . . .	Byte	 001A	  _DATA	

	   0 Warnings
	   0 Errors
