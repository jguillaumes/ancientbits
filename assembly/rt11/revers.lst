REVERS - Reverse string using s	MACRO V05.06  Wednesday 03-Jan-96 00:34  Page 1


      1						.TITLE	REVERS - Reverse string using stack
      2						.IDENT	/01.01/
      3						.MCALL	.TTYOUT,.TTYIN,.EXIT
      4
      5						; Global constants
      6		000044 			$JSW 	=: 44			; JSW address
      7		040000 			TTLC$	=: 040000		; Allow lowercase bit
      8		000256 			LBUFFER = 256			; Buffer length
      9
     10						; Read-only data
     11	000000					.PSECT	RODATA,RO,D,LCL,REL,CON
     12
     13	000000	   123 	   164 	   162 	HELLO:	.ASCII	/String reverser/
	000003	   151 	   156 	   147
	000006	   040 	   162 	   145
	000011	   166 	   145 	   162
	000014	   163 	   145 	   162
     14		000017 			LHELLO = .-HELLO
     15
     16	000017	   105 	   156 	   164 	PROMPT:	.ASCII	/Enter a line:	/
	000022	   145 	   162 	   040
	000025	   141 	   040 	   154
	000030	   151 	   156 	   145
	000033	   072 	   011
     17		000016 			LPROMPT = .-PROMPT
     18
     19	000035	   111 	   156 	   166 	INVER:	.ASCII	/Inverted line:	/
	000040	   145 	   162 	   164
	000043	   145 	   144 	   040
	000046	   154 	   151 	   156
	000051	   145 	   072 	   011
     20		000017 			LINVER = .- INVER
     21
     22	000054	   106 	   151 	   156 	FINISH:	.ASCII	/Finished.      /
	000057	   151 	   163 	   150
	000062	   145 	   144 	   056
	000065	   040 	   040 	   040
	000070	   040 	   040 	   040
     23		000017 			LFINISH = .-FINISH
     24
     25	000073	   015 			CRLF:	.BYTE	^X0D
     26	000074	   012 				.BYTE	^X0A
     27		000002 			LCRLF = .- CRLF
     28
     29						; Read-write data
     30	000000					.PSECT	DATA,RW,D,LCL,REL,CON
     31
     32	000000				BUFFER:	.BLKB	LBUFFER
     33
     34						; Code
     35	000000					.PSECT	CODE,RO,I,LCL,REL,CON
     36
     37	000000				START:
     38	000000	052767 	040000 	000044'		BIS	#TTLC$,$JSW	; Allow lowercase characters
     39
     40	000006	012701 	000000'			MOV	#HELLO,R1	; Display welcome string
     41	000012	012702 	000017 			MOV	#LHELLO,R2
REVERS - Reverse string using s	MACRO V05.06  Wednesday 03-Jan-96 00:34  Page 1-1


     42	000016	004767 	000172 			JSR	PC,LINOUT
     43	000022	004767 	000206 			JSR	PC,LBREAK
     44
     45	000026	012701 	000000'			MOV	#BUFFER,R1	; Buffer cleanup. R1 => @BUFFER
     46	000032	012702 	000256 			MOV	#LBUFFER,R2	; R2 => Buffer size
     47	000036	005000 				CLR	R0		; R0 => zero
     48	000040				CLEANUP:
     49	000040	110021 				MOVB	R0,(R1)+	; Zero bytes
     50	000042	077202 				SOB	R2,CLEANUP	; Repeat for the whole buffer
     51
     52	000044	012701 	000017'		GETLIN:	MOV	#PROMPT,R1	; Display prompt
     53	000050	012702 	000016 			MOV	#LPROMPT,R2
     54	000054	004767 	000134 			JSR	PC,LINOUT
     55
     56	000060	012701 	000000'			MOV	#BUFFER,R1	; R1 => @Buffer
     57	000064	005002 				CLR	R2		; R2 => Number of read characters
     58	000066				GETCHAR:
     59	000066					.TTYIN			; Read character into R0
     60	000072	120027 	000015 			CMPB	R0,#^X0D	; Is it a CR?
     61	000076	001406 				BEQ	GETLF		; Yes, consume LF
     62	000100	110021 				MOVB	R0,(R1)+	; No, store character in buffer
     63	000102	005202 				INC	R2		; Increment char counter
     64	000104	020227 	000256 			CMP	R2,#LBUFFER	; Full?
     65	000110	003003 				BGT	FULL		; Yes: finish
     66	000112	000765 				BR	GETCHAR		; No: get more characters
     67	000114				GETLF:
     68	000114					.TTYIN			; Consume LF
     69	000120				FULL:				; Full buffer, let's finish here
     70
     71	000120	020227 	000000 			CMP	R2,#0		; Is the buffer empty?
     72	000124	001422 				BEQ	BYE		; Yes: finish
     73
     74	000126	010246 				MOV	R2,-(SP)	; Save string length into stack
     75
     76	000130	012701 	000035'			MOV	#INVER,R1	; Display "Inverted..."
     77	000134	012702 	000017 			MOV	#LINVER,R2
     78	000140	004767 	000050 			JSR	PC,LINOUT
     79
     80	000144	012602 				MOV	(SP)+,R2	; Restore string length from stack
     81
     82	000146	012701 	000000'			MOV	#BUFFER,R1	; R1 => @Buffer
     83	000152	060201 				ADD	R2,R1		; R1 => @End of string
     84	000154				OUTR:	.TTYOUT	-(R1)		; Display character pointed by R1
     85	000162	077204 				SOB	R2,OUTR		; Loop w/decrement pointer and counter
     86	000164	004767 	000044 			JSR	PC,LBREAK	; Add line break
     87	000170	000725 				BR	GETLIN		; Get next line
     88
     89	000172	012701 	000054'		BYE:	MOV	#FINISH,R1	; Display bye message
     90	000176	012702 	000017 			MOV	#LFINISH,R2
     91	000202	004767 	000006 			JSR	PC,LINOUT
     92
     93	000206	010027 	000000 			MOV	R0,#0
     94
     95	000212					.EXIT
     96
     97					;------------------------------------------------------------------------
     98					; LINOUT: Display a text line
REVERS - Reverse string using s	MACRO V05.06  Wednesday 03-Jan-96 00:34  Page 1-2


     99					;------------------------------------------------------------------------
    100					; 	Subroutine to display a text line
    101					;	R1: @Text
    102					;	R2: Size
    103					;	R1 and R2 are destroyed
    104					;
    105	000214	020227 	000000 		LINOUT:	CMP	R2,#0		; Exit when no more chars to display
    106	000220	003404 				BLE	20$		;
    107	000222				10$:	.TTYOUT	(R1)+		; Display character pointed by R1
    108	000230	077204 				SOB	R2,10$		; Decrement counter
    109	000232	000207 			20$:	RTS	PC
    110
    111					;------------------------------------------------------------------------
    112					; LBREAK: Output a line break
    113					; Destroys R1
    114					;------------------------------------------------------------------------
    115	000234	012701 	000073'		LBREAK:	MOV	#CRLF,R1	; R1 => '\r\n'
    116	000240					.TTYOUT	(R1)+		; Output \r
    117	000246					.TTYOUT	(R1)+		; Output \n
    118	000254	000207 				RTS	PC
    119
    120		000000'				.END START
REVERS - Reverse string using s	MACRO V05.06  Wednesday 03-Jan-96 00:34  Page 1-3
Symbol table

BUFFER  000000R     003	FULL    000120R     004	INVER   000035R     002	LHELLO= 000017   	PROMPT  000017R     002
BYE     000172R     004	GETCHA  000066R     004	LBREAK  000234R     004	LINOUT  000214R     004	START   000000R     004
CLEANU  000040R     004	GETLF   000114R     004	LBUFFE= 000256   	LINVER= 000017   	TTLC$   040000
CRLF    000073R     002	GETLIN  000044R     004	LCRLF = 000002   	LPROMP= 000016   	$JSW    000044
FINISH  000054R     002	HELLO   000000R     002	LFINIS= 000017   	OUTR    000154R     004	...V1 = 000003


. ABS.	000000    000	(RW,I,GBL,ABS,OVR)
      	000000    001	(RW,I,LCL,REL,CON)
RODATA	000075    002	(RO,D,LCL,REL,CON)
DATA  	000256    003	(RW,D,LCL,REL,CON)
CODE  	000256    004	(RO,I,LCL,REL,CON)
Errors detected:  0

*** Assembler statistics


Work  file  reads: 0
Work  file writes: 0
Size of work file: 10637 Words  ( 42 Pages)
Size of core pool: 22016 Words  ( 86 Pages)
Operating  system: RT-11

Elapsed time: 00:00:00.09
DK:REVERS,DK:REVERS=DK:REVERS
